// Generated by dia2code
#ifndef SERVER__GAME__H
#define SERVER__GAME__H

#include <map>
#include <memory>

namespace server {
  class Player;
}

#include "GameStatus.h"
#include "Player.h"

namespace server {

  /// class Game - 
  class Game {
    // Associations
    server::GameStatus status;
    // Attributes
  protected:
    int idseq;
    std::map<int,std::unique_ptr<Player> > players;
    GameStatus gameStatus     = CREATING;
    // Operations
  public:
    Game ();
    void run ();
    const Player* getPlayer (int id) const;
    int addPlayer (std::unique_ptr<Player> player);
    void setPlayer (int id, std::unique_ptr<Player> player);
    void removePlayer (int id);
    // Setters and Getters
    GameStatus getStatus() const;
    void setStatus(GameStatus status);
    int getIdseq() const;
    void setIdseq(int idseq);
    const std::map<int,std::unique_ptr<Player> >& getPlayers() const;
    void setPlayers(const std::map<int,std::unique_ptr<Player> >& players);
    GameStatus getGameStatus() const;
    void setGameStatus(GameStatus gameStatus);
  };

};

#endif
