// Generated by dia2code
#ifndef AI__AI__H
#define AI__AI__H

#include <vector>

namespace engine {
  class Command;
};
namespace state {
  class Element;
};
namespace engine {
  class Engine;
  class EngineClient;
};
namespace state {
  class Observer;
}

#include "state/Observer.h"
#include "state/Element.h"
#include "engine/Command.h"
#include "engine/Engine.h"

namespace ai {

  /// class AI - 
  class AI : public state::Observer {
    // Operations
  public:
    void listCommands (std::vector<engine::Command*>& list, state::Element* e);
    virtual void stateChanged (const state::Event& event) = 0;
    virtual void run  (engine::Engine& engine) = 0;
    virtual void runClient (engine::EngineClient& engine) = 0;
    // Setters and Getters
  };

};

#endif
